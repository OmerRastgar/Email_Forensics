document.getElementById('submitButton').addEventListener('click', async function() {
    const emailInput = document.getElementById('emailInput').value;

    if (!emailInput) {
        alert('Please paste the raw email text.');
        return;
    }


    function base64ToFile(base64, filename) {
        const byteString = atob(base64); // Decode Base64 to binary string
        const byteArray = new Uint8Array(byteString.length);
        
        // Convert binary string to Uint8Array
        for (let i = 0; i < byteString.length; i++) {
            byteArray[i] = byteString.charCodeAt(i);
        }

        // Create a Blob with the binary data
        return new File([byteArray], filename, { type: 'application/octet-stream' });
        }



    try {
  

        const apiKey = "b519aa58e1dff0f6ffe50e4db5a9791d8795d893e6dd4aee1c9ad9eea7799855";      
        const base64Data= `
        UEsDBBQABgAIAAAAIQCSZC2eZQEAAJ0FAAATAAgCW0NvbnRlbnRfVHlwZXNdLnhtbCCiBAIooAAC
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0
lMtOwzAQRfdI/EPkLUrcskAINe2CxxIqUT7AtSethV+yp6+/Z9K0EUKlEbTdREpm7j13rIwHo7U1
2RJi0t6VrF/0WAZOeqXdrGQfk5f8nmUJhVPCeAcl20Bio+H11WCyCZAyUrtUsjlieOA8yTlYkQof
wFGl8tEKpNc440HITzEDftvr3XHpHYLDHGsPNhw8QSUWBrPnNX1ukkQwiWWPTWPNKpkIwWgpkOp8
6dQPSr4jFKTc9qS5DumGGhg/SKgrvwN2ujc6mqgVZGMR8VVY6uIrHxVXXi4sKYvjNgdy+qrSElp9
7Rail5ASnbk1RVuxQrt9/l9zJNwYSOdP0fh24wGRBJcIsHPujLCC6fvFUnwz7wxSEXcipgbOH6O1
7gyBtIHQPPsn59jaHENS5zj6kGij4z/G3q9src5p4AAR9fG/riWS9cnzQX0bKFB/ZctFQm9Pxjc2
B+B8e7kOvwAAAP//AwBQSwMEFAAGAAgAAAAhAJlVfgX+AAAA4QIAAAsACAJfcmVscy8ucmVscyCi
BAIooAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAACskk1LAzEQhu+C/yHMvTvbKiLS3V5E6E1k/QFDMvuBmw+Sqbb/3iiKLtS1hx4zeefJM0PW
m70d1SvHNHhXwbIoQbHT3gyuq+C5eVjcgkpCztDoHVdw4ASb+vJi/cQjSW5K/RCSyhSXKuhFwh1i
0j1bSoUP7PJN66MlycfYYSD9Qh3jqixvMP5mQD1hqq2pIG7NFajmEPgUtm/bQfO91zvLTo48gbwX
dobNIsTcH2XI06iGYsdSgfH6MZcTUghFRgMeN1qdbvT3tGhZyJAQah953ucjMSe0POeKpokfmzcf
DZqv8pzN9Tlt9C6Jt/+s5zPzrYSTj1m/AwAA//8DAFBLAwQUAAYACAAAACEA2cOOaAQDAACNCwAA
EQAAAHdvcmQvZG9jdW1lbnQueG1spJbJbtswEEDvBfoPgu4JtdiyLcQOkhgJcigQNOkH0BRtERFJ
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
AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACcUstOwzAQvCPxD5HvrVMqEFRbV6gV4sBLamjP
lrNJLBzbst2K/j0bAiGIGz7tzHpHs2PD6r012RFD1M4u2WyaswytcqW29ZK9FneTa5bFJG0pjbO4
ZCeMbCXOz+AlOI8haYwZSdi4ZE1KfsF5VA22Mk6pbalTudDKRDDU3FWVVrhx6tCiTfwiz684vie0
JZYTPwiyXnFxTP8VLZ3q/MVdcfKkJ6DA1huZUDx1kwb4QEDhkjSFblHkRA8AXmSNUcyA9wXsXSij
uATeF7BuZJAqUXRiTuwIwq33RiuZKFPxqFVw0VUpe/40mnXjwMdXgMxvUR2CTqfOxBjCg7a9jb4g
W0HWQfrmy9uAYKukwTWtLSppIgL/IWDtWi8tyfGhIr23+OoLt+li+Br5TY523OvUbL1UZGF+M952
1IAtsViS/cHBQMA9vUQwnTzN2hrL7zt/G11+u/5LitnVNKfzGdg3R2sPf0V8AAAA//8DAFBLAwQU
AAYACAAAACEAPTnTr7gBAADRBQAAEwAIAWRvY1Byb3BzL2N1c3RvbS54bWwgogQBKKAAAQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0lEuL2zAUhfeF/gejvcZ6+RXiDJM4A4FOGUimi26CLF1P
DLZkbCVtKP3vVfqYkEI3Lt7pcqWj71wOd37/tW2CE/RDbU2O6B1BARhldW1ec/Sye8QpCgYnjZaN
NZCjMwzofvH+3fy5tx30roYh8BJmyNHBuW4WhoM6QCuHO982vlPZvpXOl/1raKuqVlBYdWzBuJAR
EofqODjb4u5NDv3Sm53cWElt1YVu+LQ7d15vMf8tfg6q1tU6R9+KaFUUEYkwW2crTAld4oxnCSYp
IWzJVo/Zw/o7CrrLZYYCI1tv/Wm7ed5/kCU0+4oT4FppTAVwLCqmcJYIL6cSWiaaZymh+7WRZQPa
/39ys6b7Mrh+4fojzMNrPQ//sP0nJR9LuQVXSAc3lIwwgSnFlO1INOPpjGefJ6EWY6mfwB3s7Wi3
P1Pa60lAo7GgH/2rG8yNcdAb2UyCGY9OQe1gczvPKhaJYKnApYwqLGTpTylhWHDNaSIIi+JqEhPJ
WBMPyvkt9pcNkLJMJZU4rXSEhdKAZaI1jhOgESM64lRNYiMda2NlfUSMW9busruuZORfmOF1Fy9+
AAAA//8DAFBLAQItABQABgAIAAAAIQCSZC2eZQEAAJ0FAAATAAAAAAAAAAAAAAAAAAAAAABbQ29u
dGVudF9UeXBlc10ueG1sUEsBAi0AFAAGAAgAAAAhAJlVfgX+AAAA4QIAAAsAAAAAAAAAAAAAAAAA
ngMAAF9yZWxzLy5yZWxzUEsBAi0AFAAGAAgAAAAhANnDjmgEAwAAjQsAABEAAAAAAAAAAAAAAAAA
zQYAAHdvcmQvZG9jdW1lbnQueG1sUEsBAi0AFAAGAAgAAAAhANZks1H0AAAAMQMAABwAAAAAAAAA
AAAAAAAAAAoAAHdvcmQvX3JlbHMvZG9jdW1lbnQueG1sLnJlbHNQSwECLQAUAAYACAAAACEAlKlS
htQGAADHIAAAFQAAAAAAAAAAAAAAAAA2DAAAd29yZC90aGVtZS90aGVtZTEueG1sUEsBAi0AFAAG
AAgAAAAhALKsxaQoBAAAPQwAABEAAAAAAAAAAAAAAAAAPRMAAHdvcmQvc2V0dGluZ3MueG1sUEsB
Ai0AFAAGAAgAAAAhAFBG3vL+DwAAq6YAAA8AAAAAAAAAAAAAAAAAlBcAAHdvcmQvc3R5bGVzLnht
bFBLAQItABQABgAIAAAAIQC+fnZiXgEAANADAAAUAAAAAAAAAAAAAAAAAL8nAAB3b3JkL3dlYlNl
dHRpbmdzLnhtbFBLAQItABQABgAIAAAAIQACRvgS8wEAAHgGAAASAAAAAAAAAAAAAAAAAE8pAAB3
b3JkL2ZvbnRUYWJsZS54bWxQSwECLQAUAAYACAAAACEAL9CkRXIBAAD3AgAAEQAAAAAAAAAAAAAA
AAByKwAAZG9jUHJvcHMvY29yZS54bWxQSwECLQAUAAYACAAAACEAOvDFkG0BAADCAgAAEAAAAAAA
AAAAAAAAAAAbLgAAZG9jUHJvcHMvYXBwLnhtbFBLAQItABQABgAIAAAAIQA9OdOvuAEAANEFAAAT
AAAAAAAAAAAAAAAAAL4wAABkb2NQcm9wcy9jdXN0b20ueG1sUEsFBgAAAAAMAAwAAgMAAK8zAAAA
AA==`;
        
        const uploadFile = async () => {
        const file = base64ToFile(base64Data, 'sample.zip'); // Convert Base64 to File object

        const formData = new FormData();
        formData.append('file', file); // Append the file to the form data
        console.log("start");
        const options = {
            method: 'POST',
            headers: {
            accept: 'application/json',
            'x-apikey': apiKey,
            },
            mode: 'no-cors',
            body: formData,
        };
        
        fetch('https://www.virustotal.com/api/v3/files', options)
            .then(res => res.json())
            .then(res => console.log(res))
            .catch(err => console.error(err));
            console.log("done");
        };
        

        const data1 = {
            labels: ['Sender', 'Recipient', 'Subject Analysis', 'Attachments', 'Spam Score'],
            values: [5, 10, 7, 3, 8],
            summary: 'This is a summary of test analysis data.'
        };

        const data2 = {
            labels: ['Sender', 'Recipient', 'Subject Analysis', 'Attachments', 'Spam Score'],
            values: [54, 150, 37, 23, 48],
            summary: 'This is a summary of test analysis data.'
        };
        // Fill the charts
        createChart('chart1', data1.labels, data1.values, 'Analysis Chart 1');
        createChart('chart2', data2.labels, data2.values, 'Analysis Chart 2');

        // Display text results (optional)
        document.getElementById('results').innerText = `Analysis 1 Summary: ${data1.summary}\nAnalysis 2 Summary: ${data2.summary}`;

    } catch (error) {
        console.error('Error fetching data:', error);
        alert('An error occurred while fetching analysis data.');
    }
});

function createChart(chartId, labels, data, title) {
    const ctx = document.getElementById(chartId).getContext('2d');
    new Chart(ctx, {
        type: 'bar',
        data: {
            labels: labels,
            datasets: [{
                label: title,
                data: data,
                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                borderColor: 'rgba(75, 192, 192, 1)',
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });
}
